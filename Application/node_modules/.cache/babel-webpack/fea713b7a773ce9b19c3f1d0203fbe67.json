{"ast":null,"code":"import _asyncToGenerator from \"D:/Dimitar/Angular/ng-app-routing/Application/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/auth\";\nexport class FirebaseService {\n  constructor(fireAuth) {\n    this.fireAuth = fireAuth;\n    this.isLogged = false;\n  }\n\n  login(email, password) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.fireAuth.signInWithEmailAndPassword(email, password).then(res => {\n        _this.isLogged = true;\n      }).catch(err => {\n        console.log(err.message);\n      });\n    })();\n  }\n\n  register(email, password) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this2.fireAuth.createUserWithEmailAndPassword(email, password).then(res => {\n        _this2.isLogged = true;\n      }).catch(err => {\n        console.log(err.message);\n      });\n    })();\n  }\n\n  logout() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3.fireAuth.signOut().then(res => {\n        _this3.isLogged = false;\n      }).catch(err => {\n        console.log(err.message);\n      });\n    })();\n  }\n\n}\n\nFirebaseService.ɵfac = function FirebaseService_Factory(t) {\n  return new (t || FirebaseService)(i0.ɵɵinject(i1.AngularFireAuth));\n};\n\nFirebaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FirebaseService,\n  factory: FirebaseService.ɵfac\n});","map":{"version":3,"sources":["D:\\Dimitar\\Angular\\ng-app-routing\\Application\\src\\app\\services\\firebase.service.ts"],"names":[],"mappings":";;;AAIA,OAAM,MAAO,eAAP,CAAsB;AAI1B,EAAA,WAAA,CAAoB,QAApB,EAA6C;AAAzB,SAAA,QAAA,GAAA,QAAA;AAFpB,SAAA,QAAA,GAAmB,KAAnB;AAEkD;;AAE5C,EAAA,KAAK,CAAC,KAAD,EAAgB,QAAhB,EAAgC;AAAA;;AAAA;AACzC,YAAM,KAAI,CAAC,QAAL,CAAc,0BAAd,CAAyC,KAAzC,EAAgD,QAAhD,EAA0D,IAA1D,CAA+D,GAAG,IAAG;AACzE,QAAA,KAAI,CAAC,QAAL,GAAgB,IAAhB;AACD,OAFK,EAEH,KAFG,CAEG,GAAG,IAAG;AACb,QAAA,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,OAAhB;AACD,OAJK,CAAN;AADyC;AAM1C;;AAEK,EAAA,QAAQ,CAAC,KAAD,EAAgB,QAAhB,EAAgC;AAAA;;AAAA;AAC5C,YAAM,MAAI,CAAC,QAAL,CAAc,8BAAd,CAA6C,KAA7C,EAAoD,QAApD,EAA8D,IAA9D,CAAmE,GAAG,IAAG;AAC7E,QAAA,MAAI,CAAC,QAAL,GAAgB,IAAhB;AACD,OAFK,EAEH,KAFG,CAEG,GAAG,IAAG;AACb,QAAA,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,OAAhB;AACD,OAJK,CAAN;AAD4C;AAM7C;;AAEK,EAAA,MAAM,GAAA;AAAA;;AAAA;AACV,YAAM,MAAI,CAAC,QAAL,CAAc,OAAd,GAAwB,IAAxB,CAA6B,GAAG,IAAG;AACvC,QAAA,MAAI,CAAC,QAAL,GAAgB,KAAhB;AACD,OAFK,EAEH,KAFG,CAEG,GAAG,IAAG;AACb,QAAA,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,OAAhB;AACD,OAJK,CAAN;AADU;AAMX;;AA5ByB;;;mBAAf,e,EAAe,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,eAAA,C;AAAA,C;;;SAAf,e;AAAe,EAAA,OAAA,EAAf,eAAe,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Injectable()\nexport class FirebaseService {\n\n  isLogged:boolean = false;\n\n  constructor(private fireAuth: AngularFireAuth) { }\n\n  async login(email: string, password: string) {\n    await this.fireAuth.signInWithEmailAndPassword(email, password).then(res => {\n      this.isLogged = true;\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }\n\n  async register(email: string, password: string) {\n    await this.fireAuth.createUserWithEmailAndPassword(email, password).then(res => {\n      this.isLogged = true;\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }\n\n  async logout() {\n    await this.fireAuth.signOut().then(res => {\n      this.isLogged = false;\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}